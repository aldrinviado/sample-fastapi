name: Build and Deploy Code

on: [push, pull_request]

jobs: 
  job1:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: localhost
      DATABASE_PORT: 5432
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: fastapi
      DATABASE_USERNAME: postgres
      SECRET_KEY: 09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e72
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30

    services:
      postgres:
        image: postgres
        env: 
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: fastapi
        ports:
          - 5432:5432

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: installing python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: installing all the dependencies
        run: pip install -r requirements.txt
      # - name: test with pytest
      #   run: |
      #     pip install pytest
      #     pytest

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./
      #     file: ./Dockerfile
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags:  ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache


      # - name: Image digest
      #   run: echo ${{ steps.docker_build.outputs.digest }}



  deploy:
      build:
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: deploying application to heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
          with:
            heroku_email: ${{secrets.HEROKU_EMAIL}}
            heroku_api_key: ${{secrets.HEROKU_API_KEY}}
            heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
